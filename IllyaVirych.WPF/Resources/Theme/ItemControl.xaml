<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i ="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:local="clr-namespace:IllyaVirych.WPF.Resources.Theme">
    <DataTemplate x:Key="MessagesDataTemplate">
        <Border Name="MessageBorder" MinHeight="40" MinWidth="280" BorderThickness="1" Background="#EFEBE9" 
                    Margin="10,0,60,10" BorderBrush="#BCAAA4" CornerRadius="4" SnapsToDevicePixels="True"
                    HorizontalAlignment="Left">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="15"/>
                </Grid.RowDefinitions>
                <Grid x:Name="ImageMessageGrid" Margin="6,6,6,5">
                    <Grid.OpacityMask>
                        <VisualBrush Visual="{Binding ElementName=ClipBorder}"/>
                    </Grid.OpacityMask>
                    <Border x:Name="ClipBorder" CornerRadius="3" Background="White"/>
                    <Image Stretch="UniformToFill" Cursor="Hand" 
                               ToolTip="Click to open image in your default image viewer"
                               Source="{Binding Picture}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction
                                        Command="{Binding DataContext.OpenImageCommand, 
                                        RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                                        CommandParameter="{Binding}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Image>
                </Grid>
                <TextBlock x:Name="MessageTxtBlock" Grid.Row="1" Margin="7,5,7,0" TextWrapping="Wrap" 
                               VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                               Text="{Binding Message}"/>
                <TextBlock Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Stretch"
                               Margin="0,0,5,0" FontSize="10" Opacity="0.8"
                               Text="{Binding Time, StringFormat={}{0:t}}"/>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsOriginNative}" Value="True">
                <Setter TargetName="MessageBorder" Property="HorizontalAlignment" Value="Right"/>
                <Setter TargetName="MessageBorder" Property="Margin" Value="60,0,10,10"/>
                <Setter TargetName="MessageBorder" Property="Background" Value="#BBDEFB"/>
                <Setter TargetName="MessageBorder" Property="BorderBrush" Value="#64B5F6"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Picture}" Value="{x:Null}">
                <Setter TargetName="ImageMessageGrid" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Message}" Value="{x:Null}">
                <Setter TargetName="MessageTxtBlock" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="MessageBorder" Property="MaxWidth" Value="320"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Message}" Value="{x:Null}"/>
                    <Condition Binding="{Binding IsOriginNative}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="MessageBorder" Property="Margin" Value="0,0,10,10"/>
                    <Setter TargetName="MessageBorder" Property="HorizontalAlignment" Value="Right"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>